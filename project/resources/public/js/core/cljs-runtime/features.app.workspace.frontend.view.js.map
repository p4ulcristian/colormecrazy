{"version":3,"sources":["features/app/workspace/frontend/view.cljs"],"mappings":"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","names":["features.app.workspace.frontend.view/get-workspace-id","cljs.core/deref","cljs.core.get_in","router.frontend.zero/state","features.app.workspace.frontend.view/check-auth-and-workspace-access","auth-user","auth-loading?","workspace-id","cljs.core/reset!","parquery.frontend.request/send-queries","response","cljs.core.println","user","features.app.workspace.frontend.view/load-workspace-data","workspace","workspace-loading?","workspace-data","features.app.workspace.frontend.view/handle-logout","features.app.workspace.frontend.view/loading-screen","features.app.workspace.frontend.view/get-random-welcome-message","username","name","or__5025__auto__","welcome-keys","prefix-keys","random-prefix-key","cljs.core/rand-nth","welcome-prefix","translations.core/tr","random-key","message-text","features.app.workspace.frontend.view/workspace-header","var_args","G__38569","features.app.workspace.frontend.view/feature-card","js/Error","icon","title","description","link-url","card-content","features.app.workspace.frontend.view/features-grid","features.app.workspace.frontend.view/workspace-footer","features.app.workspace.frontend.view/workspace-content","features.app.workspace.frontend.view/access-denied-screen","js/window","features.app.workspace.frontend.view/view","reagent.core.atom","and__5023__auto__"],"sourcesContent":["(ns features.app.workspace.frontend.view\n  (:require [reagent.core :as r]\n            [parquery.frontend.request :as parquery]\n            [router.frontend.zero :as router]\n            [translations.core :as tr]\n            [zero.frontend.re-frame :as rf]))\n\n(defn- get-workspace-id []\n  \"Get workspace ID from router parameters\"\n  (get-in @router/state [:parameters :path :workspace-id]))\n\n(defn- check-auth-and-workspace-access [auth-user auth-loading? workspace-id]\n  \"Check authentication and workspace access permissions\"\n  (reset! auth-loading? true)\n  (parquery/send-queries\n    {:queries {:user/current {}}\n     :parquery/context {}\n     :callback (fn [response]\n                 (println \"Workspace auth check response:\" response)\n                 (let [user (:user/current response)]\n                   (println \"Current user in workspace:\" user)\n                   (println \"User workspace-id:\" (:user/workspace-id user))\n                   (println \"Expected workspace-id:\" workspace-id)\n                   (reset! auth-user user)\n                   (reset! auth-loading? false)\n))}))\n\n(defn- load-workspace-data [workspace workspace-loading? workspace-id]\n  \"Load workspace information from the server\"\n  (when workspace-id\n    (reset! workspace-loading? true)\n    (parquery/send-queries\n      {:queries {:workspaces/get-by-id {:workspace/id workspace-id}}\n       :parquery/context {}\n       :callback (fn [response]\n                   (let [workspace-data (:workspaces/get-by-id response)]\n                     (reset! workspace workspace-data)\n                     (reset! workspace-loading? false)))})))\n\n(defn- handle-logout []\n  \"Handle user logout\"\n  (parquery/send-queries\n    {:queries {:users/logout {}}\n     :parquery/context {}\n     :callback (fn [response]\n                 (:success (:users/logout response)))}))\n\n(defn- loading-screen []\n  \"Loading state component\"\n  [:div {:style {:min-height \"100vh\"\n                 :display \"flex\"\n                 :flex-direction \"column\"\n                 :align-items \"center\"\n                 :justify-content \"center\"\n                 :background \"#c9ddd8\"}}\n   [:div {:class \"loading-spinner\"}]\n   [:p {:style {:color \"#2563eb\"\n                :font-size \"1.2rem\"\n                :margin-top \"1rem\"\n                :font-weight \"500\"}}\n    \"Loading...\"]])\n\n(defn- get-random-welcome-message [username]\n  \"Returns a random welcoming message personalized with username and elevator maintenance themes\"\n  (let [name (or username \"there\")\n        welcome-keys [:welcome/ready-to-keep-running\n                      :welcome/ensure-safe-comfortable\n                      :welcome/elevate-service\n                      :welcome/expertise-keeps-moving\n                      :welcome/lift-standards\n                      :welcome/vertical-excellence\n                      :welcome/skilled-hands\n                      :welcome/perfect-journey\n                      :welcome/safety-reliability\n                      :welcome/rise-to-challenges\n                      :welcome/dedication-connects\n                      :welcome/smooth-rides]\n        prefix-keys [:welcome-prefix/welcome-back\n                     :welcome-prefix/hello  \n                     :welcome-prefix/good-morning\n                     :welcome-prefix/great-to-see\n                     :welcome-prefix/welcome\n                     :welcome-prefix/good-to-see]\n        random-prefix-key (rand-nth prefix-keys)\n        welcome-prefix (str (tr/tr random-prefix-key) \", \" name \"! \")\n        random-key (rand-nth welcome-keys)\n        message-text (tr/tr random-key)]\n    (str welcome-prefix message-text)))\n\n(defn- workspace-header [workspace auth-user]\n  \"Workspace header with title and user info\"\n  [:div {:style {:display \"flex\" :justify-content \"center\" :align-items \"center\" :margin-bottom \"3rem\"}}\n   [:div {:style {:text-align \"center\"}}\n    [:h1 {:style {:color \"#333\" :margin \"0\" :margin-bottom \"0.5rem\"}}\n     (:workspace/name workspace)]\n    [:p {:style {:color \"#72a9bf\" :margin \"0\" :font-size \"1rem\" :font-style \"italic\" :margin-bottom \"0.5rem\"}}\n     (get-random-welcome-message (:user/username auth-user))]\n    [:p {:style {:color \"#666\" :margin \"0\" :font-size \"1.1rem\"}}\n     (:workspace/description workspace)]]])\n\n\n(defn- feature-card\n  ([icon title description]\n   [feature-card icon title description nil])\n  ([icon title description link-url]\n   \"Individual feature card component\"\n   (let [card-content [:div {:style {:border \"1px solid #e0e0e0\" :border-radius \"8px\" :padding \"2rem\" :text-align \"center\"\n                                     :cursor (when link-url \"pointer\")\n                                     :transition \"box-shadow 0.2s\"\n                                     :box-shadow (when link-url \"0 2px 4px rgba(0,0,0,0.1)\")}}\n                       [:div {:style {:font-size \"2rem\" :margin-bottom \"1rem\"}} icon]\n                       [:h3 {:style {:color \"#333\" :margin-bottom \"0.5rem\"}} title]\n                       [:p {:style {:color \"#666\" :font-size \"0.9rem\"}} description]]]\n     (if link-url\n       [:a {:href link-url\n            :style {:text-decoration \"none\"}}\n        card-content]\n       card-content))))\n\n(defn- features-grid [workspace-id]\n  \"Grid of feature cards\"\n  [:div {:style {:display \"grid\" :grid-template-columns \"repeat(auto-fit, minmax(250px, 1fr))\" :gap \"2rem\" :margin-top \"3rem\"}}\n   [feature-card \"\u2728\" (tr/tr :features/the-team) (tr/tr :features/the-team-desc) \"/the_team\"]\n   [feature-card \"\ud83c\udfe0\" (tr/tr :features/homepage) (tr/tr :features/homepage-desc) \"/\"]])\n\n(defn- workspace-footer [workspace-id]\n  \"Footer with workspace ID\"\n  [:div {:style {:border-top \"1px solid #eee\" :padding-top \"2rem\" :margin-top \"3rem\"}}\n   [:p {:style {:color \"#888\" :font-size \"0.9rem\"}}\n    (str (tr/tr :dashboard/workspace-id) \": \" workspace-id)]])\n\n(defn- workspace-content [auth-user workspace workspace-id]\n  \"Main workspace dashboard content\"\n  [:div {:style {:min-height \"100vh\"\n                 :background \"#c9ddd8\"\n                 :padding \"2rem\"}}\n   [:div {:style {:max-width \"1200px\"\n                  :margin \"0 auto\"}}\n    [workspace-header workspace auth-user]\n    [:div {:style {:background \"white\" :border-radius \"8px\" :padding \"3rem\" :box-shadow \"0 2px 4px rgba(0,0,0,0.1)\" :text-align \"center\"}}\n     [features-grid workspace-id]\n     [workspace-footer workspace-id]]]])\n\n(defn- access-denied-screen []\n  \"Screen shown when access is denied\"\n  [:div {:style {:min-height \"100vh\"\n                 :display \"flex\"\n                 :align-items \"center\"\n                 :justify-content \"center\"\n                 :background \"#c9ddd8\"\n                 :padding \"2rem\"}}\n   [:div {:style {:background \"white\"\n                  :border-radius \"12px\"\n                  :padding \"3rem 2.5rem\"\n                  :box-shadow \"0 8px 24px rgba(0,0,0,0.15)\"\n                  :text-align \"center\"\n                  :max-width \"500px\"\n                  :width \"100%\"}}\n    [:div {:style {:color \"#dc3545\" :font-size \"4rem\" :margin-bottom \"1.5rem\"}} \"\ud83d\udeab\"]\n    [:h1 {:style {:color \"#333\" \n                  :margin \"0 0 1rem 0\" \n                  :font-size \"2rem\"\n                  :font-weight \"600\"}} \n     (tr/tr :dashboard/access-denied)]\n    [:p {:style {:color \"#666\" \n                 :margin \"0 0 2rem 0\" \n                 :font-size \"1.1rem\"\n                 :line-height \"1.5\"}} \n     (tr/tr :dashboard/access-denied-message)]\n    [:button {:on-click #(set! (.-location js/window) \"/login\")\n              :style {:padding \"0.75rem 2rem\" \n                      :background \"#72a9bf\" \n                      :color \"white\" \n                      :border \"none\" \n                      :border-radius \"8px\" \n                      :cursor \"pointer\"\n                      :font-size \"1rem\"\n                      :font-weight \"500\"\n                      :transition \"background-color 0.2s\"\n                      :box-shadow \"0 2px 4px rgba(114, 169, 191, 0.3)\"}}\n     (tr/tr :dashboard/go-to-login)]]])\n\n(defn view []\n  \"Main workspace view component\"\n  (let [auth-user (r/atom nil)\n        workspace (r/atom nil)\n        auth-loading? (r/atom true)\n        workspace-loading? (r/atom true)\n        workspace-id (get-workspace-id)]\n    \n    ;; Check auth and load workspace on component mount\n    (check-auth-and-workspace-access auth-user auth-loading? workspace-id)\n    (load-workspace-data workspace workspace-loading? workspace-id)\n    \n    (fn []\n      (cond\n        (or @auth-loading? @workspace-loading?) [loading-screen]\n        (and @auth-user @workspace) [workspace-content @auth-user @workspace workspace-id]\n        :else [access-denied-screen]))))"]}