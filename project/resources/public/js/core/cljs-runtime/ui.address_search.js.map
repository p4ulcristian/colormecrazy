{"version":3,"sources":["ui/address_search.cljs"],"mappings":"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","names":["re_frame.core.reg_sub","p__35870","vec__35871","cljs.core.nth","db","_","component-id","cljs.core.get_in","re_frame.core.reg_event_db","p__35878","vec__35879","state","cljs.core/assoc-in","p__35883","vec__35884","key","value","ui.address-search/debounced-search","search-fn","delay","timeout-ref","cljs.core.atom","search-term","workspace-id","callback","cljs.core/deref","js/clearTimeout","cljs.core/reset!","js/setTimeout","ui.address-search/search-addresses","cljs.core.println","parquery.frontend.request/send-queries","response","addresses","cljs.core/count","ui.address-search/debounced-search-addresses","p__35904","map__35905","cljs.core/--destructure-map","cljs.core.get","ui.address-search/address-search-dropdown","on-select","placeholder","disabled","re_frame.core.subscribe","re-frame.core/dispatch","or__5025__auto__","p__35908","map__35909","loading?","show-dropdown?","selected-address","and__5023__auto__","cljs.core.not_EQ_","translations.core/tr","e","new-term","cljs.core/seq","results","clojure.string/blank?","cljs.core/not","cljs.core/empty?","iter__5503__auto__","s__35915","cljs.core/LazySeq","temp__5823__auto__","cljs.core/chunked-seq?","c__5501__auto__","size__5502__auto__","b__35917","cljs.core/chunk-buffer","i__35916","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__35914","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","address","cljs.core/chunk-first"],"sourcesContent":["(ns ui.address-search\n  (:require [\"react\" :as react]\n            [re-frame.core :as rf]\n            [parquery.frontend.request :as parquery]\n            [clojure.string :as str]\n            [translations.core :as tr]))\n\n;; Re-frame state for address search\n(rf/reg-sub\n  :ui/address-search\n  (fn [db [_ component-id]]\n    (get-in db [:ui :address-search component-id])))\n\n(rf/reg-event-db\n  :ui/address-search-set-state\n  (fn [db [_ component-id state]]\n    (assoc-in db [:ui :address-search component-id] state)))\n\n(rf/reg-event-db\n  :ui/address-search-update\n  (fn [db [_ component-id key value]]\n    (assoc-in db [:ui :address-search component-id key] value)))\n\n;; Debounced search function\n(defn debounced-search [search-fn delay]\n  (let [timeout-ref (atom nil)]\n    (fn [search-term workspace-id callback]\n      (when @timeout-ref\n        (js/clearTimeout @timeout-ref))\n      (reset! timeout-ref\n        (js/setTimeout\n          (fn []\n            (search-fn search-term workspace-id callback))\n          delay)))))\n\n;; Search addresses via ParQuery\n(defn search-addresses [search-term workspace-id callback]\n  (println \"DEBUG: address-search searching for:\" search-term)\n  (parquery/send-queries\n    {:queries {:workspace-addresses/search {:search search-term :limit 20}}\n     :parquery/context {:workspace-id workspace-id}\n     :callback (fn [response]\n                 (let [addresses (:workspace-addresses/search response [])]\n                   (println \"DEBUG: address-search found\" (count addresses) \"addresses\")\n                   (callback addresses)))}))\n\n;; Create debounced search with 300ms delay\n(def debounced-search-addresses (debounced-search search-addresses 300))\n\n(defn address-search-dropdown\n  \"Searchable address dropdown component\"\n  [{:keys [component-id workspace-id value on-select placeholder disabled]}]\n  ;; Initialize state on first render\n  (when-not @(rf/subscribe [:ui/address-search component-id])\n    (rf/dispatch [:ui/address-search-set-state component-id\n                  {:search-term \"\"\n                   :addresses []\n                   :loading? false\n                   :show-dropdown? false\n                   :selected-address (or value {})}]))\n  \n  (fn [{:keys [component-id workspace-id value on-select placeholder disabled]}]\n    (let [state @(rf/subscribe [:ui/address-search component-id])\n          search-term (or (:search-term state) \"\")\n          addresses (or (:addresses state) [])\n          loading? (or (:loading? state) false)\n          show-dropdown? (or (:show-dropdown? state) false)\n          selected-address (or (:selected-address state) value)]\n      \n      (println \"DEBUG: address-search component rendering:\")\n      (println \"  component-id:\" component-id)\n      (println \"  workspace-id:\" workspace-id)\n      (println \"  value:\" value)\n      (println \"  state:\" state)\n      (println \"  search-term:\" search-term)\n      (println \"  selected-address:\" selected-address)\n      \n      ;; Update selected address when value prop changes\n      (when (and value (not= value selected-address))\n        (rf/dispatch [:ui/address-search-update component-id :selected-address value]))\n    \n    [:div {:class \"address-search-container\" :style {:position \"relative\" :width \"100%\"}}\n     \n     ;; Search input\n     [:input {:type \"text\"\n              :placeholder (or placeholder (tr/tr :address-search/placeholder))\n              :value search-term\n              :disabled disabled\n              :on-change (fn [e]\n                           (let [new-term (-> e .-target .-value)]\n                             (rf/dispatch [:ui/address-search-update component-id :search-term new-term])\n                             (rf/dispatch [:ui/address-search-update component-id :show-dropdown? (seq new-term)])\n                             ;; Trigger search if conditions are met\n                             (when (and workspace-id \n                                       (seq new-term) \n                                       (>= (count new-term) 1))\n                               (rf/dispatch [:ui/address-search-update component-id :loading? true])\n                               (debounced-search-addresses \n                                 new-term \n                                 workspace-id\n                                 (fn [results]\n                                   (rf/dispatch [:ui/address-search-update component-id :addresses results])\n                                   (rf/dispatch [:ui/address-search-update component-id :loading? false]))))))\n              :on-focus (fn [_]\n                          (rf/dispatch [:ui/address-search-update component-id :show-dropdown? true]))\n              :on-blur (fn [_]\n                         ;; Delay hiding to allow clicks on dropdown items\n                         (js/setTimeout \n                           #(rf/dispatch [:ui/address-search-update component-id :show-dropdown? false]) \n                           200))\n              :style {:width \"100%\"\n                      :padding \"8px 12px\"\n                      :border \"1px solid #ccc\"\n                      :border-radius \"4px\"\n                      :font-size \"14px\"\n                      :background (if disabled \"#f5f5f5\" \"#fff\")}}]\n     \n     ;; Selected address display (when not searching)\n     (when (and selected-address (str/blank? search-term))\n       [:div {:style {:position \"absolute\"\n                      :top \"0\"\n                      :left \"0\" \n                      :right \"0\"\n                      :height \"100%\"\n                      :padding \"8px 12px\"\n                      :background \"#f9f9f9\"\n                      :border \"1px solid #ccc\"\n                      :border-radius \"4px\"\n                      :display \"flex\"\n                      :align-items \"center\"\n                      :pointer-events \"none\"\n                      :color \"#333\"}}\n        (:address/display selected-address (:address/name selected-address))])\n     \n     ;; Dropdown with results\n     (when (and show-dropdown? (seq search-term))\n       [:div {:class \"address-search-dropdown\"\n              :style {:position \"absolute\"\n                      :top \"100%\"\n                      :left \"0\"\n                      :right \"0\"\n                      :background \"#fff\"\n                      :border \"1px solid #ccc\"\n                      :border-top \"none\"\n                      :border-radius \"0 0 4px 4px\"\n                      :max-height \"200px\"\n                      :overflow-y \"auto\"\n                      :z-index 1000\n                      :box-shadow \"0 2px 8px rgba(0,0,0,0.1)\"}}\n        \n        ;; Loading indicator\n        (when loading?\n          [:div {:style {:padding \"12px\" :text-align \"center\" :color \"#666\"}}\n           (tr/tr :address-search/searching)])\n        \n        ;; No results message\n        (when (and (not loading?) (empty? addresses) (seq search-term))\n          [:div {:style {:padding \"12px\" :text-align \"center\" :color \"#666\"}}\n           (tr/tr :address-search/no-results)])\n        \n        ;; Address options\n        (for [address addresses]\n          [:div {:key (:address/id address)\n                 :class \"address-option\"\n                 :on-click (fn [_]\n                             (rf/dispatch [:ui/address-search-update component-id :selected-address address])\n                             (rf/dispatch [:ui/address-search-update component-id :search-term \"\"])\n                             (rf/dispatch [:ui/address-search-update component-id :show-dropdown? false])\n                             (when on-select\n                               (on-select address)))\n                 :style {:padding \"8px 12px\"\n                         :cursor \"pointer\"\n                         :border-bottom \"1px solid #eee\"}}\n           [:div {:style {:font-weight \"500\"}} (:address/name address)]\n           [:div {:style {:font-size \"12px\" :color \"#666\"}} \n            (str (:address/address-line1 address) \", \" (:address/city address))]]) ])])))"]}