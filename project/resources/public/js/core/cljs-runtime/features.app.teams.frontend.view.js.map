{"version":3,"sources":["features/app/teams/frontend/view.cljs"],"mappings":"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","names":["features.app.teams.frontend.view/get-workspace-id","cljs.core/deref","router-state","router.frontend.zero/state","workspace-id","cljs.core.get_in","features.app.teams.frontend.view/load-teams-query","params","G__35998","zero.frontend.re-frame/dispatch","parquery.frontend.request/send-queries","response","result","G__36001","features.app.teams.frontend.view/get-query-type","is-new?","features.app.teams.frontend.view/prepare-team-data","team","cljs.core.dissoc","features.app.teams.frontend.view/handle-save-response","query-type","callback","load-teams","cljs.core.get","G__36020","js/alert","features.app.teams.frontend.view/save-team-query","modal-is-new?","team-data","context","features.app.teams.frontend.view/delete-team-query","user-id","features.app.teams.frontend.view/validate-username","username","clojure.string/trim","features.app.teams.frontend.view/validate-full-name","full-name","features.app.teams.frontend.view/validate-email","email","email-str","cljs.core/not","cljs.core/re-matches","features.app.teams.frontend.view/validate-password","password","features.app.teams.frontend.view/validate-team-member","errors","G__36076","cljs.core.assoc","translations.core/tr","G__36078","G__36079","zero.frontend.re-frame/reg-sub","db","_","G__36080","G__36081","G__36082","G__36083","G__36084","G__36085","G__36090","G__36091","G__36092","G__36093","G__36094","G__36095","G__36097","G__36098","zero.frontend.re-frame/reg-event-db","p__36099","vec__36100","cljs.core.nth","loading?","cljs.core/assoc-in","G__36104","G__36105","p__36111","vec__36112","data","updated-db","G__36116","G__36117","p__36118","vec__36119","G__36122","G__36123","G__36128","G__36129","p__36132","vec__36136","field-key","value","G__36144","G__36145","p__36149","vec__36151","G__36155","G__36156","p__36162","vec__36163","or__5025__auto__","G__36174","G__36175","p__36176","vec__36178","features.app.teams.frontend.view/field-label","label","has-error?","fexpr__36181","p1__36188#","features.app.teams.frontend.view/input-base-props","attrs","G__36191","cljs.core.merge","features.app.teams.frontend.view/render-select-input","form-data","options","iter__5503__auto__","s__36261","cljs.core/LazySeq","temp__5823__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5501__auto__","size__5502__auto__","cljs.core/count","b__36263","cljs.core/chunk-buffer","i__36262","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__36260","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","option","features.app.teams.frontend.view/render-text-input","features.app.teams.frontend.view/field-input","features.app.teams.frontend.view/field-error","error-msg","features.app.teams.frontend.view/form-field","cljs.core/contains?","features.app.teams.frontend.view/form-fields","features.app.teams.frontend.view/handle-save-click","on-save","validation-errors","cljs.core/empty?","G__36314","G__36317","G__36318","G__36319","G__36322","G__36325","features.app.teams.frontend.view/team-modal","on-cancel","G__36342","zero.frontend.re-frame/subscribe","G__36345","G__36347","G__36350","ui.modal/modal","ui.modal/modal-header","ui.modal/modal-footer","ui.enhanced-button/enhanced-button","features.app.teams.frontend.view/user-name-render","row","features.app.teams.frontend.view/role-render","role","G__36402","clojure.string/capitalize","features.app.teams.frontend.view/status-render","active","features.app.teams.frontend.view/contact-render","phone","features.app.teams.frontend.view/teams-table","teams","on-edit","on-delete","query-fn","ui.data-table/server-side-data-table","js/confirm","G__36421","features.app.teams.frontend.view/teams-page-header","ui.page-header/page-header","G__36424","features.app.teams.frontend.view/teams-content","teams-data","delete-team","event-vec","features.app.teams.frontend.view/modal-when-open","save-team","modal-team","G__36434","G__36435","G__36436","features.app.teams.frontend.view/view","G__36437","G__36438","G__36439","G__36440","zero.frontend.react/use-effect","cljs.core/chunk-first"],"sourcesContent":["(ns features.app.teams.frontend.view\n  (:require [reagent.core :as r]\n            [clojure.string :as str]\n            [parquery.frontend.request :as parquery]\n            [router.frontend.zero :as router]\n            [zero.frontend.re-frame :as rf]\n            [zero.frontend.react :as zero-react]\n            [ui.modal :as modal]\n            [ui.form-field :as form-field]\n            [ui.data-table :as data-table]\n            [ui.enhanced-button :as enhanced-button]\n            [ui.page-header :as page-header]\n            [translations.core :as tr]))\n\n(defn- get-workspace-id\n  \"Get workspace ID from router parameters\"\n  []\n  (let [router-state @router/state\n        workspace-id (get-in router-state [:parameters :path :workspace-id])]\n    workspace-id))\n\n(defn- load-teams-query\n  \"Execute ParQuery to load team members with pagination\"\n  [workspace-id params]\n  (rf/dispatch [:teams/set-loading true])\n  (parquery/send-queries\n   {:queries {:workspace-teams/get-paginated params}\n    :parquery/context {:workspace-id workspace-id}\n    :callback (fn [response]\n               (let [result (:workspace-teams/get-paginated response)]\n                 (rf/dispatch [:teams/load-success result])))}))\n\n(defn- get-query-type\n  \"Get appropriate query type for save operation\"\n  [is-new?]\n  (if @is-new? \n    :workspace-teams/create \n    :workspace-teams/update))\n\n(defn- prepare-team-data\n  \"Prepare team member data for save\"\n  [team is-new?]\n  (if @is-new?\n    (dissoc team :user/id)\n    team))\n\n(defn- handle-save-response\n  \"Handle save response and update UI\"\n  [response query-type callback load-teams]\n  (callback)\n  (if (:success (get response query-type))\n    (do (rf/dispatch [:teams/close-modal])\n        (load-teams))\n    (js/alert (str \"Error: \" (:error (get response query-type))))))\n\n(defn- save-team-query\n  \"Execute ParQuery to save team member\"\n  [team workspace-id modal-is-new? callback load-teams]\n  (let [query-type (get-query-type modal-is-new?)\n        team-data (prepare-team-data team modal-is-new?)\n        context {:workspace-id workspace-id}]\n    (parquery/send-queries\n     {:queries {query-type team-data}\n      :parquery/context context\n      :callback (fn [response]\n                 (handle-save-response response query-type callback load-teams))})))\n\n(defn- delete-team-query\n  \"Execute ParQuery to delete team member\"\n  [user-id workspace-id load-teams]\n  (parquery/send-queries\n   {:queries {:workspace-teams/delete {:user/id user-id}}\n    :parquery/context {:workspace-id workspace-id}\n    :callback (fn [response]\n               (if (:success (:workspace-teams/delete response))\n                 (load-teams)\n                 (js/alert \"Error deleting team member\")))}))\n\n(defn- validate-username\n  \"Validate username\"\n  [username]\n  (< (count (str/trim (str username))) 2))\n\n(defn- validate-full-name\n  \"Validate full name\"\n  [full-name]\n  (< (count (str/trim (str full-name))) 2))\n\n(defn- validate-email\n  \"Validate email\"\n  [email]\n  (let [email-str (str/trim (str email))]\n    (or (< (count email-str) 3)\n        (not (re-matches #\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$\" email-str)))))\n\n(defn- validate-password\n  \"Validate password (only for new users)\"\n  [password is-new?]\n  (when is-new?\n    (< (count (str/trim (str password))) 6)))\n\n(defn validate-team-member\n  \"Validates team member data and returns map of field errors\"\n  [team is-new?]\n  (let [errors {}\n        username (:user/username team)\n        full-name (:user/full-name team)\n        email (:user/email team)\n        password (:user/password team)]\n    (cond-> errors\n      (validate-username username) (assoc :user/username (tr/tr :teams/error-username))\n      (validate-full-name full-name) (assoc :user/full-name (tr/tr :teams/error-full-name))\n      (validate-email email) (assoc :user/email (tr/tr :teams/error-email))\n      (validate-password password is-new?) (assoc :user/password (tr/tr :teams/error-password)))))\n\n;; Re-frame events and subscriptions\n(rf/reg-sub\n  :teams/data\n  (fn [db _]\n    (get-in db [:teams :data] {:users [] :pagination {}})))\n\n(rf/reg-sub\n  :teams/loading?\n  (fn [db _]\n    (get-in db [:teams :loading?] false)))\n\n(rf/reg-sub\n  :teams/modal-team\n  (fn [db _]\n    (get-in db [:teams :modal-team] nil)))\n\n(rf/reg-sub\n  :teams/modal-is-new?\n  (fn [db _]\n    (get-in db [:teams :modal-is-new?] false)))\n\n(rf/reg-sub\n  :teams/modal-form\n  (fn [db _]\n    (get-in db [:teams :modal-form] {})))\n\n(rf/reg-sub\n  :teams/modal-errors\n  (fn [db _]\n    (get-in db [:teams :modal-errors] {})))\n\n(rf/reg-sub\n  :teams/modal-loading?\n  (fn [db _]\n    (get-in db [:teams :modal-loading?] false)))\n\n\n(rf/reg-event-db\n  :teams/set-loading\n  (fn [db [_ loading?]]\n    (assoc-in db [:teams :loading?] loading?)))\n\n(rf/reg-event-db\n  :teams/load-success\n  (fn [db [_ data]]\n    (let [updated-db (-> db\n                         (assoc-in [:teams :data] data)\n                         (assoc-in [:teams :loading?] false))]\n      updated-db)))\n\n\n(rf/reg-event-db\n  :teams/open-modal\n  (fn [db [_ team is-new?]]  ; Standard re-frame pattern, no trim-v\n    (-> db\n        (assoc-in [:teams :modal-team] team)\n        (assoc-in [:teams :modal-is-new?] is-new?))))\n\n(rf/reg-event-db\n  :teams/close-modal\n  (fn [db _]\n    (-> db\n        (assoc-in [:teams :modal-team] nil)\n        (assoc-in [:teams :modal-is-new?] false)\n        (assoc-in [:teams :modal-form] {})\n        (assoc-in [:teams :modal-errors] {}))))\n\n(rf/reg-event-db\n  :teams/update-form-field\n  (fn [db [_ field-key value]]\n    (assoc-in db [:teams :modal-form field-key] value)))\n\n(rf/reg-event-db\n  :teams/set-form-errors\n  (fn [db [_ errors]]\n    (assoc-in db [:teams :modal-errors] errors)))\n\n(rf/reg-event-db\n  :teams/init-form\n  (fn [db [_ team-data]]\n    (assoc-in db [:teams :modal-form] (or team-data {}))))\n\n(rf/reg-event-db\n  :teams/set-modal-loading\n  (fn [db [_ loading?]]\n    (assoc-in db [:teams :modal-loading?] loading?)))\n\n(defn- field-label [label field-key has-error?]\n  [:label {:style {:display \"block\" :margin-bottom \"0.5rem\" :font-weight \"600\"\n                   :font-size \"0.875rem\" :letter-spacing \"0.025em\"\n                   :color (if has-error? \"#dc3545\" \"#374151\")}}\n   label \n   (when (#{:user/username :user/full-name :user/email} field-key) \n     [:span {:style {:color \"#ef4444\" :margin-left \"0.25rem\"}} \"*\"])])\n\n(defn- input-base-props\n  \"Base properties for input fields\"\n  [field-key team has-error? attrs]\n  {:value (str (get team field-key \"\"))\n   :on-change #(rf/dispatch [:teams/update-form-field field-key (.. % -target -value)])\n   :style (merge {:width \"100%\"\n                  :padding \"0.75rem 1rem\"\n                  :border (if has-error? \"2px solid #dc3545\" \"1px solid #d1d5db\")\n                  :border-radius \"8px\"\n                  :font-size \"1rem\"\n                  :line-height \"1.5\"\n                  :transition \"border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out\"\n                  :box-shadow (if has-error? \n                                \"0 0 0 3px rgba(220, 53, 69, 0.1)\" \n                                \"0 1px 2px 0 rgba(0, 0, 0, 0.05)\")\n                  :outline \"none\"}\n                 (:style attrs)\n                 {:focus {:border-color (if has-error? \"#dc3545\" \"#3b82f6\")\n                         :box-shadow (if has-error? \n                                       \"0 0 0 3px rgba(220, 53, 69, 0.1)\"\n                                       \"0 0 0 3px rgba(59, 130, 246, 0.1)\")}})})\n\n(defn- render-select-input\n  \"Render select dropdown input\"\n  [field-key form-data has-error? attrs options]\n  [:select (merge (dissoc attrs :type :options) (input-base-props field-key form-data has-error? attrs))\n   (for [option options]\n     ^{:key (:value option)}\n     [:option {:value (:value option)} (:label option)])])\n\n(defn- render-text-input\n  \"Render text input\"\n  [field-key form-data has-error? attrs]\n  [:input (merge attrs (input-base-props field-key form-data has-error? attrs))])\n\n(defn- field-input\n  \"Render appropriate input type\"\n  [field-key form-data has-error? attrs]\n  (if (:options attrs)\n    (render-select-input field-key form-data has-error? attrs (:options attrs))\n    (render-text-input field-key form-data has-error? attrs)))\n\n(defn- field-error [error-msg]\n  (when error-msg\n    [:div {:style {:color \"#dc3545\" :font-size \"0.875rem\" :margin-top \"0.25rem\"}}\n     error-msg]))\n\n(defn- form-field\n  \"Complete form field with label, input and error\"\n  [label field-key form-data errors attrs]\n  (let [has-error? (contains? errors field-key)]\n    [:div {:style {:margin-bottom \"1.5rem\"}}\n     [field-label label field-key has-error?]\n     [field-input field-key form-data has-error? attrs]\n     [field-error (get errors field-key)]]))\n\n(defn- form-fields\n  \"All form input fields\"\n  [form-data errors is-new?]\n  [:div\n   [form-field (tr/tr :teams/username) :user/username form-data errors\n    {:type \"text\" :placeholder (tr/tr :teams/username-placeholder)}]\n   [form-field (tr/tr :teams/full-name) :user/full-name form-data errors\n    {:type \"text\" :placeholder (tr/tr :teams/full-name-placeholder)}]\n   [form-field (tr/tr :teams/email) :user/email form-data errors\n    {:type \"email\" :placeholder (tr/tr :teams/email-placeholder)}]\n   [form-field (tr/tr :teams/phone) :user/phone form-data errors\n    {:type \"tel\" :placeholder (tr/tr :teams/phone-placeholder)}]\n   [form-field (tr/tr :teams/role) :user/role form-data errors\n    {:type \"select\" \n     :options [{:value \"employee\" :label (tr/tr :teams/employee)}\n               {:value \"admin\" :label (tr/tr :teams/admin)}]}]\n   (when is-new?\n     [form-field (tr/tr :teams/password) :user/password form-data errors\n      {:type \"password\" :placeholder (tr/tr :teams/password-placeholder)}])\n   (when-not is-new?\n     [form-field (tr/tr :teams/active-field) :user/active form-data errors\n      {:type \"select\"\n       :options [{:value true :label (tr/tr :teams/active)}\n                 {:value false :label (tr/tr :teams/inactive)}]}])])\n\n(defn- handle-save-click\n  \"Handle save button click with validation\"\n  [form-data is-new? on-save]\n  (let [validation-errors (validate-team-member form-data is-new?)]\n    (if (empty? validation-errors)\n      (do (rf/dispatch [:teams/set-form-errors {}])\n          (rf/dispatch [:teams/set-modal-loading true])\n          (on-save form-data (fn [] (rf/dispatch [:teams/set-modal-loading false]))))\n      (rf/dispatch [:teams/set-form-errors validation-errors]))))\n\n(defn team-modal\n  \"Modal for creating/editing team members using new UI components\"\n  [team-data is-new? on-save on-cancel]\n  (let [form-data (rf/subscribe [:teams/modal-form])\n        errors (rf/subscribe [:teams/modal-errors])\n        loading? (rf/subscribe [:teams/modal-loading?])]\n    ;; Initialize form when modal opens\n    (rf/dispatch [:teams/init-form team-data])\n    (fn [team-data is-new? on-save on-cancel]\n      [modal/modal {:on-close on-cancel :close-on-backdrop? true}\n       ^{:key \"header\"} [modal/modal-header\n        {:title (if is-new? (tr/tr :teams/modal-add-title) (tr/tr :teams/modal-edit-title))\n         :subtitle (if is-new? \n                     (tr/tr :teams/modal-add-subtitle)\n                     (tr/tr :teams/modal-edit-subtitle))}]\n       ^{:key \"form\"} [form-fields @form-data @errors is-new?]\n       ^{:key \"footer\"} [modal/modal-footer\n        ^{:key \"cancel\"} [enhanced-button/enhanced-button\n         {:variant :secondary\n          :on-click on-cancel\n          :text (tr/tr :teams/cancel)}]\n        ^{:key \"save\"} [enhanced-button/enhanced-button\n         {:variant :primary\n          :loading? @loading?\n          :on-click #(handle-save-click @form-data is-new? on-save)\n          :text (if @loading? (tr/tr :teams/saving) (tr/tr :teams/save-member))}]]])))\n\n(defn- user-name-render\n  \"Custom render function for user name column with username and email\"\n  [full-name row]\n  [:div \n   [:div {:style {:font-weight \"600\" :color \"#111827\" :font-size \"0.875rem\"}}\n    full-name]\n   [:div {:style {:color \"#6b7280\" :font-size \"0.75rem\" :margin-top \"0.25rem\"}}\n    (str \"@\" (:user/username row))]\n   [:div {:style {:color \"#6b7280\" :font-size \"0.75rem\"}}\n    (:user/email row)]])\n\n(defn- role-render\n  \"Custom render function for role column\"\n  [role row]\n  [:span {:style {:display \"inline-block\" :padding \"0.25rem 0.75rem\"\n                  :background (case role\n                                \"superadmin\" \"#dc2626\"\n                                \"admin\" \"#ea580c\" \n                                \"employee\" \"#059669\"\n                                \"#6b7280\")\n                  :color \"white\"\n                  :border-radius \"12px\" :font-size \"0.75rem\" :font-weight \"500\"}}\n   (str/capitalize (str role))])\n\n(defn- status-render\n  \"Custom render function for active status\"\n  [active row]\n  [:span {:style {:display \"inline-block\" :padding \"0.25rem 0.75rem\"\n                  :background (if active \"#10b981\" \"#ef4444\")\n                  :color \"white\"\n                  :border-radius \"12px\" :font-size \"0.75rem\" :font-weight \"500\"}}\n   (if active (tr/tr :teams/active) (tr/tr :teams/inactive))])\n\n(defn- contact-render\n  \"Custom render function for contact info\"\n  [phone row]\n  [:div\n   (when phone\n     [:div {:style {:color \"#374151\" :font-size \"0.875rem\"}}\n      phone])])\n\n(defn teams-table\n  \"Teams table using server-side data-table component with search, sorting, and pagination\"\n  [teams loading? on-edit on-delete query-fn]\n  [data-table/server-side-data-table\n   {:headers [{:key :user/full-name :label (tr/tr :teams/table-header-member) :render user-name-render :sortable? true}\n              {:key :user/role :label (tr/tr :teams/table-header-role) :render role-render :sortable? true}\n              {:key :user/active :label (tr/tr :teams/table-header-status) :render status-render :sortable? true}\n              {:key :user/phone :label (tr/tr :teams/table-header-phone) :render contact-render :sortable? false}]\n    :data-source @teams\n    :data-key :users\n      :loading? @loading?\n      :empty-message (tr/tr :teams/no-members-found)\n      :id-key :user/id\n      :table-id :teams-table\n      :show-search? true\n      :show-pagination? true\n      :query-fn query-fn\n      :actions [{:key :edit :label (tr/tr :teams/action-edit) :variant :primary :on-click on-edit}\n                {:key :delete :label (tr/tr :teams/action-delete) :variant :danger \n                 :on-click (fn [row] \n                            (when (js/confirm (tr/tr :teams/confirm-delete))\n                              (on-delete (:user/id row))))}]}])\n\n(defn- teams-page-header\n  \"Page header with title and add button using new UI component\"\n  []\n  [page-header/page-header\n   {:title (tr/tr :teams/page-title)\n    :description (tr/tr :teams/page-description)\n    :action-button [enhanced-button/enhanced-button\n                    {:variant :success\n                     :on-click (fn [] \n                                (rf/dispatch [:teams/open-modal {:user/role \"employee\"\n                                                                :user/active true} true]))\n                     :text (tr/tr :teams/add-new-member)}]}])\n\n(defn- teams-content\n  \"Main content area with server-side data table\"\n  [teams-data loading? delete-team query-fn]\n  [teams-table \n   teams-data \n   loading?\n   (fn [team]\n     (let [event-vec [:teams/open-modal team false]]\n       (rf/dispatch event-vec)))\n   delete-team\n   query-fn])\n\n(defn- modal-when-open\n  \"Render modal when team member is selected\"\n  [save-team]\n  (let [modal-team (rf/subscribe [:teams/modal-team])\n        modal-is-new? (rf/subscribe [:teams/modal-is-new?])]\n    (when @modal-team\n      [team-modal @modal-team @modal-is-new? save-team\n       (fn [] (rf/dispatch [:teams/close-modal]))])))\n\n(defn view []\n  (let [workspace-id (get-workspace-id)\n        teams-data (rf/subscribe [:teams/data])\n        loading? (rf/subscribe [:teams/loading?])\n        modal-team (rf/subscribe [:teams/modal-team])\n        modal-is-new? (rf/subscribe [:teams/modal-is-new?])\n        \n        load-teams (fn [params]\n                     (load-teams-query workspace-id (or params {})))\n        \n        save-team (fn [team callback]\n                    (save-team-query team workspace-id modal-is-new? \n                                     callback (fn [] (load-teams {}))))\n        \n        delete-team (fn [user-id]\n                      (delete-team-query user-id workspace-id (fn [] (load-teams {}))))]\n    \n    \n    ;; Load teams on component mount (authentication is handled by backend)\n    (zero-react/use-effect\n     {;:mount (fn [] (load-teams {}))\n      :params #js[]})\n    \n    [:div {:style {:min-height \"100vh\" :background \"#f9fafb\"}}\n     [:div {:style {:max-width \"1200px\" :margin \"0 auto\" :padding \"2rem\"}} \n      [teams-page-header]\n      [teams-content teams-data loading? delete-team load-teams]\n      [modal-when-open save-team]]]))"]}