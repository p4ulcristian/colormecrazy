{"version":3,"sources":["app/frontend/request.cljs"],"mappings":"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","names":["app.frontend.request/get-csrf-token","csrf-el","js/document","csrf-token","app.frontend.request/csrf-token","app.frontend.request/get-body","response","status","body","error?","cljs.core/contains?","cljs.core._EQ_","js/console.error","p__26082","map__26083","cljs.core/--destructure-map","cljs.core.get","app.frontend.request/pathom","query","callback","initial-data","c__18577__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__18578__auto__","switch__18346__auto__","state_26106","state_val_26107","inst_26089","inst_26084","inst_26085","inst_26086","inst_26087","cljs.core/PersistentHashMap","inst_26088","statearr-26110","statearr-26112","statearr-26113","inst_26102","inst_26103","inst_26104","cljs.core.async.impl.ioc-helpers/return-chan","statearr-26114","inst_26092","statearr-26118","inst_26094","inst_26095","inst_26096","inst_26097","inst_26098","inst_26099","inst_26100","cljs.core.async.impl.ioc-helpers/take!","statearr-26122","state-machine__18347__auto__","ret-value__18348__auto__","result__18349__auto__","cljs.core/keyword-identical?","ex__18350__auto__","e26123","statearr-26124","cljs.core/seq","statearr-26125","cljs.core/first","state__18579__auto__","statearr-26129","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.post","cljs.core.merge","G__26130","G__26131","zero.frontend.re-frame/reg-fx","pathom-props","G__26135","G__26136","zero.frontend.re-frame/reg-event-fx","p__26137","vec__26138","cljs.core.nth","_","p__26144","map__26145","app.frontend.request/pathom-with-workspace-id","workspace-id","G__26146","zero.frontend.re-frame/subscribe","state_26188","state_val_26189","inst_26161","inst_26150","inst_26151","inst_26152","inst_26153","inst_26154","inst_26155","inst_26156","cljs.core/deref","inst_26157","inst_26158","statearr-26193","statearr-26194","statearr-26196","inst_26181","inst_26182","inst_26183","statearr-26200","inst_26167","statearr-26202","inst_26169","inst_26173","inst_26174","inst_26175","inst_26176","inst_26177","inst_26178","inst_26179","statearr-26206","e26207","statearr-26208","statearr-26209","statearr-26210","G__26211","G__26212","G__26222","G__26223","p__26224","vec__26225","p__26228","map__26229","app.frontend.request/pathom-formdata","files","form-data","js/FormData","G__26230","cljs.core.doall","cljs.core.map_indexed","index","file","p__26231","map__26232","app.frontend.request/pathom-with-file","props","formdata","state_26249","state_val_26250","inst_26237","inst_26238","inst_26239","inst_26240","inst_26241","inst_26242","inst_26243","inst_26245","inst_26246","inst_26247","statearr-26260","e26261","statearr-26262","statearr-26268","statearr-26269","G__26275","G__26276","G__26287","G__26288","p__26289","vec__26290"],"sourcesContent":["\n(ns app.frontend.request\n  (:require-macros\n   [cljs.core.async.macros :refer [go]])\n  (:require\n   [zero.frontend.re-frame :as r]\n   [cljs-http.client :as http]\n   [cljs.core.async :refer [<!]]))\n\n(defn get-csrf-token []\n  (let [csrf-el    (.getElementById js/document \"csrf-token\")\n        csrf-token (.getAttribute csrf-el \"data-csrf-token\")]\n    csrf-token))\n\n(def csrf-token (get-csrf-token))\n\n(defn get-body [response]\n  (let [status (:status response)\n        body   (:body response)\n        error? (contains? body :error)]\n    (if (= status 200)\n      (if error?\n        (js/console.error \"Error:\" body)\n        body)\n      (js/console.error \"Error:\" status))))\n\n(defn pathom [{:keys [query callback initial-data]}]\n  (go\n    (let [response (<! (http/post \"/query\"\n                                  (merge\n                                   {:headers         {\"X-CSRF-Token\" csrf-token}\n                                    :transit-params  {:query query\n                                                      :initial-data (or initial-data {})}})))\n          body (get-body response)]\n      (callback body))))\n\n(r/reg-fx :pathom/request\n  (fn [pathom-props]\n    (pathom pathom-props)))\n\n(r/reg-event-fx :pathom/request!\n  (fn [_ [_ pathom-props]]\n    {:pathom/request pathom-props}))\n\n(defn pathom-with-workspace-id\n  [{:keys [query callback initial-data]}]\n  (let [workspace-id (r/subscribe [:workspace/get-id])]\n    (go\n      (let [response (<! (http/post \"/query\"\n                                    (merge\n                                     {:headers         {\"X-CSRF-Token\" csrf-token}\n                                      :transit-params  {:query query\n                                                        :initial-data \n                                                        (merge \n                                                         {:workspace/id @workspace-id}\n                                                         (or initial-data {}))}})))\n            body (get-body response)]\n        (callback body)))))\n\n(r/reg-fx :pathom/ws-request\n  (fn [pathom-props]\n    (pathom-with-workspace-id pathom-props)))\n\n(r/reg-event-fx :pathom/ws-request!\n  (fn [_ [_ pathom-props]]\n    {:pathom/ws-request pathom-props}))\n\n;; -----------------------------------------------------------------------------\n;; ---- Pathom Query With Formdata ----\n\n(defn pathom-formdata [{:keys [query files]}]\n  (let [form-data    (js/FormData.)\n        workspace-id (r/subscribe [:workspace/get-id])]\n    (doall\n      (map-indexed (fn [index file]\n                     (.append form-data index file))\n                   files))\n    (.append form-data \"query\" {:query        query\n                                :workspace-id @workspace-id})\n    form-data))\n\n(defn pathom-with-file [{:keys [callback] :as props}]\n  (let [formdata (pathom-formdata props)]\n    (go\n      (callback\n        (:body (<! (http/post \"/fquery\"\n                              {:headers {\"X-CSRF-Token\" csrf-token}\n                               :body    formdata})))))))\n\n(r/reg-fx :pathom/formdata\n          (fn [pathom-props]\n            (pathom-with-file pathom-props)))\n\n(r/reg-event-fx :pathom/frequest!\n                (fn [_ [_ pathom-props]]\n                  {:pathom/formdata pathom-props}))\n\n;; ---- Pathom Query With Formdata ----\n;; -----------------------------------------------------------------------------\n"]}