{"version":3,"sources":["features/app/superadmin/frontend/view.cljs"],"mappings":"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","names":["features.app.superadmin.frontend.view/validate-user","user","is-new?","errors","username","full-name","email","password","role","G__16222","clojure.string/trim","cljs.core.assoc","cljs.core/empty?","cljs.core/not","cljs.core/re-matches","and__5023__auto__","cljs.core/seq","features.app.superadmin.frontend.view/validate-workspace","workspace","name","G__16223","features.app.superadmin.frontend.view/field-label","label","field-key","has-error?","fexpr__16224","features.app.superadmin.frontend.view/field-input","attrs","cljs.core._EQ_","p1__16225#","cljs.core.merge","cljs.core.dissoc","cljs.core/deref","cljs.core.get","cljs.core.swap_BANG_","cljs.core/assoc","p1__16226#","features.app.superadmin.frontend.view/field-error","temp__5823__auto__","error","features.app.superadmin.frontend.view/input-field","cljs.core/contains?","features.app.superadmin.frontend.view/role-select","p1__16227#","or__5025__auto__","features.app.superadmin.frontend.view/workspace-select","workspaces","p1__16228#","iter__5503__auto__","s__16230","cljs.core/LazySeq","cljs.core/chunked-seq?","c__5501__auto__","size__5502__auto__","cljs.core/count","b__16232","cljs.core/chunk-buffer","i__16231","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__16229","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","features.app.superadmin.frontend.view/validation-summary","features.app.superadmin.frontend.view/modal-buttons","is-valid?","on-cancel","on-save","e","features.app.superadmin.frontend.view/modal-form","features.app.superadmin.frontend.view/modal-header","features.app.superadmin.frontend.view/modal-backdrop","children","features.app.superadmin.frontend.view/user-modal","modal-open?","current-errors","features.app.superadmin.frontend.view/table-header","on-add","features.app.superadmin.frontend.view/table-th","text","align","features.app.superadmin.frontend.view/role-badge","G__16233","features.app.superadmin.frontend.view/status-badge","active?","features.app.superadmin.frontend.view/action-button","color","on-click","margin?","features.app.superadmin.frontend.view/user-row","on-edit","on-delete","features.app.superadmin.frontend.view/user-table","users","s__16235","b__16237","i__16236","iter__16234","features.app.superadmin.frontend.view/workspace-modal-form","features.app.superadmin.frontend.view/workspace-modal","features.app.superadmin.frontend.view/workspace-row","features.app.superadmin.frontend.view/workspace-table","s__16239","b__16241","i__16240","iter__16238","features.app.superadmin.frontend.view/view","reagent.core.atom","current-user","loading?","current-workspace","workspace-modal-open?","workspaces-loading?","auth-user","auth-loading?","check-auth","cljs.core/reset!","parquery.frontend.request/send-queries","response","load-users","users-data","save-user","user-data","query-key","js/alert","delete-user-fn","js/confirm","load-workspaces","workspaces-data","save-workspace","workspace-data","delete-workspace-fn","p1__16242#","base-data","update-data","p1__16243#","cljs.core/chunk-first"],"sourcesContent":["(ns features.app.superadmin.frontend.view\n  (:require [reagent.core :as r]\n            [clojure.string :as str]\n            [parquery.frontend.request :as parquery]))\n\n(defn validate-user\n  \"Validates user data and returns map of field errors\"\n  [user is-new?]\n  (let [errors {}\n        username (str (:user/username user))\n        full-name (str (:user/full-name user))\n        email (str (:user/email user))\n        password (str (:user/password user))\n        role (:user/role user)]\n    (cond-> errors\n      (< (count (str/trim username)) 3)\n      (assoc :user/username \"Username must be at least 3 characters\")\n      \n      (< (count (str/trim full-name)) 2)\n      (assoc :user/full-name \"Full name is required\")\n      \n      (or (nil? role) (empty? (str role)))\n      (assoc :user/role \"Role is required\")\n      \n      (and (not (empty? email))\n           (not (re-matches #\".+@.+\\..+\" email)))\n      (assoc :user/email \"Please enter a valid email address\")\n      \n      (and is-new? (< (count (str/trim password)) 6))\n      (assoc :user/password \"Password must be at least 6 characters\")\n      \n      (and (not is-new?) (seq (str/trim password)) (< (count (str/trim password)) 6))\n      (assoc :user/password \"New password must be at least 6 characters\"))))\n\n(defn validate-workspace\n  \"Validates workspace data and returns map of field errors\"\n  [workspace]\n  (let [errors {}\n        name (str (:workspace/name workspace))]\n    (cond-> errors\n      (< (count (str/trim name)) 2)\n      (assoc :workspace/name \"Workspace name is required\"))))\n\n(defn- field-label [label field-key has-error?]\n  [:label {:style {:display \"block\" :margin-bottom \"0.5rem\" :font-weight \"bold\"\n                   :color (if has-error? \"#dc3545\" \"inherit\")}}\n   label (when (#{:user/username :user/full-name :user/password} field-key) \" *\")])\n\n(defn- field-input [field-key user has-error? attrs]\n  (if (= (:type attrs) \"textarea\")\n    [:textarea (merge (dissoc attrs :type)\n                      {:value (str (get @user field-key \"\"))\n                       :on-change #(swap! user assoc field-key (.. % -target -value))\n                       :style (merge {:width \"100%\" :padding \"0.5rem\" :border-radius \"4px\"\n                                      :border (str \"1px solid \" (if has-error? \"#dc3545\" \"#ccc\"))\n                                      :min-height \"80px\" :resize \"vertical\"}\n                                     (:style attrs))})]\n    [:input (merge attrs\n                   {:value (str (get @user field-key \"\"))\n                    :on-change #(swap! user assoc field-key (.. % -target -value))\n                    :style (merge {:width \"100%\" :padding \"0.5rem\" :border-radius \"4px\"\n                                   :border (str \"1px solid \" (if has-error? \"#dc3545\" \"#ccc\"))}\n                                  (:style attrs))})]))\n\n(defn- field-error [field-key errors]\n  (when-let [error (get errors field-key)]\n    [:div {:style {:color \"#dc3545\" :font-size \"0.875rem\" :margin-top \"0.25rem\"}}\n     error]))\n\n(defn input-field [label field-key user errors attrs]\n  (let [has-error? (contains? errors field-key)]\n    [:div {:style {:margin-bottom \"1rem\"}}\n     [field-label label field-key has-error?]\n     [field-input field-key user has-error? attrs]\n     [field-error field-key errors]]))\n\n(defn role-select [user errors]\n  (let [has-error? (contains? errors :user/role)]\n    [:div {:style {:margin-bottom \"1rem\"}}\n     [field-label \"Role\" :user/role has-error?]\n     [:select {:value (or (:user/role @user) \"\")\n               :on-change #(swap! user assoc :user/role (.. % -target -value))\n               :style {:width \"100%\" :padding \"0.5rem\" :border-radius \"4px\"\n                       :border (str \"1px solid \" (if has-error? \"#dc3545\" \"#ccc\"))}}\n      [:option {:value \"\"} \"-- Select Role --\"]\n      [:option {:value \"employee\"} \"Employee\"]\n      [:option {:value \"admin\"} \"Admin\"]\n      [:option {:value \"superadmin\"} \"Super Admin\"]]\n     [field-error :user/role errors]]))\n\n(defn workspace-select [user errors workspaces]\n  (let [has-error? (contains? errors :user/workspace-id)]\n    [:div {:style {:margin-bottom \"1rem\"}}\n     [field-label \"Workspace\" :user/workspace-id has-error?]\n     [:select {:value (or (:user/workspace-id @user) \"\")\n               :on-change #(swap! user assoc :user/workspace-id (.. % -target -value))\n               :style {:width \"100%\" :padding \"0.5rem\" :border-radius \"4px\"\n                       :border (str \"1px solid \" (if has-error? \"#dc3545\" \"#ccc\"))}}\n      [:option {:value \"\"} \"-- No Workspace --\"]\n      (for [workspace workspaces]\n        [:option {:key (:workspace/id workspace) :value (:workspace/id workspace)} \n         (:workspace/name workspace)])]\n     [field-error :user/workspace-id errors]]))\n\n(defn validation-summary [errors]\n  (when (seq errors)\n    [:div {:style {:background \"#f8d7da\" :border \"1px solid #f5c6cb\" :color \"#721c24\"\n                   :padding \"0.75rem\" :border-radius \"4px\" :margin-bottom \"1rem\"}}\n     \"Please fix the errors above before saving.\"]))\n\n(defn modal-buttons [is-valid? on-cancel on-save]\n  [:div {:style {:display \"flex\" :gap \"1rem\" :justify-content \"flex-end\" :margin-top \"2rem\"}}\n   [:button {:type \"button\" :on-click on-cancel\n             :style {:padding \"0.5rem 1rem\" :border \"1px solid #ccc\" :background \"#f5f5f5\"\n                     :border-radius \"4px\" :cursor \"pointer\"}}\n    \"Cancel\"]\n   [:button {:type \"submit\" :disabled (not is-valid?)\n             :on-click (fn [e] (.preventDefault e) (when is-valid? (on-save)))\n             :style {:padding \"0.5rem 1rem\" :border \"none\" :color \"white\" :border-radius \"4px\"\n                     :background (if is-valid? \"#007bff\" \"#6c757d\")\n                     :cursor (if is-valid? \"pointer\" \"not-allowed\")\n                     :opacity (if is-valid? 1 0.6)}}\n    \"Save\"]])\n\n(defn modal-form [user is-new? errors is-valid? on-save workspaces]\n  [:form {:on-submit (fn [e] (.preventDefault e) (when is-valid? (on-save)))}\n   [input-field \"Username\" :user/username user errors {:type \"text\"}]\n   [input-field \"Full Name\" :user/full-name user errors {:type \"text\"}]\n   [input-field \"Email\" :user/email user errors {:type \"email\"}]\n   [input-field \"Phone\" :user/phone user errors {:type \"tel\"}]\n   [role-select user errors]\n   [workspace-select user errors workspaces]\n   [input-field (if is-new? \"Password\" \"New Password (leave empty to keep current)\") \n                :user/password user errors {:type \"password\" :placeholder (when-not is-new? \"Leave empty to keep current password\")}]\n   [validation-summary errors]])\n\n(defn modal-header [is-new?]\n  [:h2 {:style {:margin-bottom \"1.5rem\"}}\n   (if is-new? \"Add New User\" \"Edit User\")])\n\n(defn modal-backdrop [children]\n  [:div {:style {:position \"fixed\" :top \"0\" :left \"0\" :width \"100%\" :height \"100%\"\n                 :background \"rgba(0, 0, 0, 0.5)\" :display \"flex\" :align-items \"center\"\n                 :justify-content \"center\" :z-index \"1000\"}}\n   [:div {:style {:background \"#fff\" :border-radius \"8px\" :padding \"2rem\"\n                  :width \"500px\" :max-width \"90vw\"}}\n    children]])\n\n(defn user-modal [user modal-open? on-save on-cancel workspaces]\n  (when @modal-open?\n    (let [is-new? (not (:user/id @user))\n          current-errors (validate-user @user is-new?)\n          is-valid? (empty? current-errors)]\n      [modal-backdrop\n       [:<>\n        [modal-header is-new?]\n        [modal-form user is-new? current-errors is-valid? on-save workspaces]\n        [modal-buttons is-valid? on-cancel on-save]]])))\n\n(defn- table-header [on-add]\n  [:div {:style {:display \"flex\" :justify-content \"space-between\" :align-items \"center\" :margin-bottom \"1.5rem\"}}\n   [:h2 \"Users\"]\n   [:button {:on-click on-add :style {:padding \"0.5rem 1rem\" :background \"#28a745\" :color \"white\" :border \"none\" :border-radius \"4px\" :cursor \"pointer\"}} \"Add User\"]])\n\n(defn- table-th [text align]\n  [:th {:style {:padding \"0.75rem\" :text-align (or align \"left\") :border-bottom \"1px solid #ddd\"}} text])\n\n(defn- role-badge [role]\n  [:span {:style {:padding \"0.25rem 0.5rem\" :border-radius \"4px\" :font-size \"0.875rem\" :color \"white\"\n                  :background (case role \"superadmin\" \"#dc3545\" \"admin\" \"#fd7e14\" \"#28a745\")}}\n   role])\n\n(defn- status-badge [active?]\n  [:span {:style {:padding \"0.25rem 0.5rem\" :border-radius \"4px\" :font-size \"0.875rem\" :color \"white\"\n                  :background (if active? \"#28a745\" \"#6c757d\")}}\n   (if active? \"Active\" \"Inactive\")])\n\n(defn- action-button [text color on-click margin?]\n  [:button {:on-click on-click\n            :style {:padding \"0.25rem 0.5rem\" :background color :color \"white\" :border \"none\"\n                    :border-radius \"4px\" :cursor \"pointer\" :font-size \"0.875rem\"\n                    :margin-right (when margin? \"0.5rem\")}}\n   text])\n\n(defn- user-row [user on-edit on-delete]\n  [:tr {:key (:user/id user)\n        :style {:border-bottom \"1px solid #eee\"}}\n   [:td {:style {:padding \"0.75rem\"}}\n    [:div (:user/full-name user)]\n    [:div {:style {:font-size \"0.8rem\" :color \"#666\"}} (:user/username user)]]\n   [:td {:style {:padding \"0.75rem\"}} (:user/email user)]\n   [:td {:style {:padding \"0.75rem\"}} [role-badge (:user/role user)]]\n   [:td {:style {:padding \"0.75rem\"}} \n    (if (:user/workspace-name user)\n      [:span {:style {:font-size \"0.875rem\" :color \"#666\"}} \n       (:user/workspace-name user)]\n      [:span {:style {:font-size \"0.875rem\" :color \"#999\"}} \"None\"])]\n   [:td {:style {:padding \"0.75rem\"}} [status-badge (:user/active user)]]\n   [:td {:style {:padding \"0.75rem\" :text-align \"center\"}}\n    [action-button \"Edit\" \"#007bff\" #(on-edit user) true]\n    [action-button \"Delete\" \"#dc3545\" #(on-delete user) false]]])\n\n(defn user-table [users on-add on-edit on-delete]\n  [:div {:style {:background \"white\" :border-radius \"8px\" :padding \"1.5rem\" :box-shadow \"0 2px 4px rgba(0,0,0,0.1)\"}}\n   [table-header on-add]\n   [:table {:style {:width \"100%\" :border-collapse \"collapse\"}}\n    [:thead\n     [:tr {:style {:background \"#f8f9fa\"}}\n      [table-th \"Name\" nil]\n      [table-th \"Email\" nil]\n      [table-th \"Role\" nil]\n      [table-th \"Workspace\" nil]\n      [table-th \"Status\" nil]\n      [table-th \"Actions\" \"center\"]]]\n    [:tbody\n     (for [user users]\n       [user-row user on-edit on-delete])]]])\n\n;; Workspace Components\n(defn workspace-modal-form [workspace errors is-valid? on-save]\n  [:form {:on-submit (fn [e] (.preventDefault e) (when is-valid? (on-save)))}\n   [input-field \"Name\" :workspace/name workspace errors {:type \"text\"}]\n   [input-field \"Description\" :workspace/description workspace errors {:type \"textarea\" :rows \"3\"}]\n   [validation-summary errors]])\n\n(defn workspace-modal [workspace modal-open? on-save on-cancel]\n  (when @modal-open?\n    (let [is-new? (not (:workspace/id @workspace))\n          current-errors (validate-workspace @workspace)\n          is-valid? (empty? current-errors)]\n      [modal-backdrop\n       [:<>\n        [:h2 {:style {:margin-bottom \"1.5rem\"}}\n         (if is-new? \"Add New Workspace\" \"Edit Workspace\")]\n        [workspace-modal-form workspace current-errors is-valid? on-save]\n        [modal-buttons is-valid? on-cancel on-save]]])))\n\n(defn workspace-row [workspace on-edit on-delete]\n  [:tr {:key (:workspace/id workspace)\n        :style {:border-bottom \"1px solid #eee\"}}\n   [:td {:style {:padding \"0.75rem\"}}\n    [:div (:workspace/name workspace)]\n    [:div {:style {:font-size \"0.8rem\" :color \"#666\"}} \n     (when (:workspace/description workspace) (:workspace/description workspace))]]\n   [:td {:style {:padding \"0.75rem\"}} [status-badge (:workspace/active workspace)]]\n   [:td {:style {:padding \"0.75rem\"}} \n    [:div {:style {:font-size \"0.8rem\" :color \"#999\"}}\n     (:workspace/created-at workspace)]]\n   [:td {:style {:padding \"0.75rem\" :text-align \"center\"}}\n    [action-button \"Edit\" \"#007bff\" #(on-edit workspace) true]\n    [action-button \"Delete\" \"#dc3545\" #(on-delete workspace) false]]])\n\n(defn workspace-table [workspaces on-add on-edit on-delete]\n  [:div {:style {:background \"white\" :border-radius \"8px\" :padding \"1.5rem\" :box-shadow \"0 2px 4px rgba(0,0,0,0.1)\"}}\n   [:div {:style {:display \"flex\" :justify-content \"space-between\" :align-items \"center\" :margin-bottom \"1.5rem\"}}\n    [:h2 \"Workspaces\"]\n    [:button {:on-click on-add :style {:padding \"0.5rem 1rem\" :background \"#28a745\" :color \"white\" :border \"none\" :border-radius \"4px\" :cursor \"pointer\"}} \"Add Workspace\"]]\n   [:table {:style {:width \"100%\" :border-collapse \"collapse\"}}\n    [:thead\n     [:tr {:style {:background \"#f8f9fa\"}}\n      [table-th \"Name\" nil]\n      [table-th \"Status\" nil]\n      [table-th \"Created\" nil]\n      [table-th \"Actions\" \"center\"]]]\n    [:tbody\n     (for [workspace workspaces]\n       [workspace-row workspace on-edit on-delete])]]])\n\n(defn view []\n  (let [users (r/atom [])\n        current-user (r/atom {})\n        modal-open? (r/atom false)\n        loading? (r/atom true)\n        workspaces (r/atom [])\n        current-workspace (r/atom {})\n        workspace-modal-open? (r/atom false)\n        workspaces-loading? (r/atom true)\n        auth-user (r/atom nil)\n        auth-loading? (r/atom true)\n        \n        check-auth #(do (reset! auth-loading? true)\n                         (parquery/send-queries\n                           {:queries {:user/current {}}\n                            :parquery/context {}\n                            :callback (fn [response]\n                                        (let [user (:user/current response)]\n                                          (reset! auth-user user)\n                                          (reset! auth-loading? false)\n))}))\n\n        load-users #(do (reset! loading? true)\n                         (parquery/send-queries\n                           {:queries {:users/get-all {}}\n                            :parquery/context {}\n                            :callback (fn [response]\n                                        (let [users-data (:users/get-all response)]\n                                          (if (:error users-data)\n                                            (do \n                                              (reset! users []))\n                                            (reset! users (or users-data [])))\n                                          (reset! loading? false)))}))\n        \n        save-user (fn [user-data is-new?]\n                    (let [query-key (if is-new? :users/create :users/update)]\n                      (parquery/send-queries\n                        {:queries {query-key user-data}\n                         :parquery/context {}\n                         :callback (fn [response]\n                                     (if (:success (get response query-key))\n                                       (do (load-users) (reset! modal-open? false))\n                                       (js/alert (str \"Error: \" (:error (get response query-key))))))})))\n        \n        delete-user-fn (fn [user]\n                         (when (js/confirm (str \"Delete user \" (:user/full-name user) \"?\"))\n                           (parquery/send-queries\n                             {:queries {:users/delete {:user/id (:user/id user)}}\n                              :parquery/context {}\n                              :callback (fn [response]\n                                          (if (:success (:users/delete response))\n                                            (load-users)\n                                            (js/alert (str \"Error: \" (:error (:users/delete response))))))})))\n\n        load-workspaces #(do (reset! workspaces-loading? true)\n                             (parquery/send-queries\n                               {:queries {:workspaces/get-all {}}\n                                :parquery/context {}\n                                :callback (fn [response]\n                                            (let [workspaces-data (:workspaces/get-all response)]\n                                              (if (:error workspaces-data)\n                                                (do \n                                                  (reset! workspaces []))\n                                                (reset! workspaces (or workspaces-data [])))\n                                              (reset! workspaces-loading? false)))}))\n        \n        save-workspace (fn [workspace-data is-new?]\n                         (let [query-key (if is-new? :workspaces/create :workspaces/update)]\n                           (parquery/send-queries\n                             {:queries {query-key workspace-data}\n                              :parquery/context {}\n                              :callback (fn [response]\n                                          (if (:success (get response query-key))\n                                            (do (load-workspaces) (reset! workspace-modal-open? false))\n                                            (js/alert (str \"Error: \" (:error (get response query-key))))))})))\n        \n        delete-workspace-fn (fn [workspace]\n                              (when (js/confirm (str \"Delete workspace \" (:workspace/name workspace) \"?\"))\n                                (parquery/send-queries\n                                  {:queries {:workspaces/delete {:workspace/id (:workspace/id workspace)}}\n                                   :parquery/context {}\n                                   :callback (fn [response]\n                                               (if (:success (:workspaces/delete response))\n                                                 (load-workspaces)\n                                                 (js/alert (str \"Error: \" (:error (:workspaces/delete response))))))})))]\n    \n    ;; Check auth and load data on component mount\n    (check-auth)\n    (load-users)\n    (load-workspaces)\n    \n(fn []\n      (if @auth-loading?\n        [:div {:style {:min-height \"100vh\"\n                       :display \"flex\"\n                       :align-items \"center\"\n                       :justify-content \"center\"\n                       :background \"#f5f5f5\"}}\n         [:div {:style {:text-align \"center\"}}\n          \"Checking authentication...\"]]\n        (if (and @auth-user (= \"superadmin\" (:user/role @auth-user)))\n          [:div {:style {:min-height \"100vh\"\n                         :background \"#f5f5f5\"\n                         :padding \"2rem\"}}\n           [:div {:style {:max-width \"1200px\"\n                          :margin \"0 auto\"}}\n            [:div {:style {:display \"flex\" :justify-content \"space-between\" :align-items \"center\" :margin-bottom \"2rem\"}}\n             [:h1 {:style {:color \"#333\" :margin \"0\"}}\n              \"Super Admin - User Management\"]\n             [:div {:style {:display \"flex\" :gap \"1rem\" :align-items \"center\"}}\n              [:span {:style {:color \"#666\"}}\n               (str \"Welcome, \" (:user/full-name @auth-user))]\n              [:button {:on-click #(parquery/send-queries\n                                                  {:queries {:users/logout {}}\n                                                   :parquery/context {}\n                                                   :callback (fn [response]\n                                                               (:success (:users/logout response)))})\n                        :style {:padding \"0.5rem 1rem\" :background \"#dc3545\" :color \"white\" :border \"none\" :border-radius \"4px\" :cursor \"pointer\"}}\n               \"Logout\"]]]\n            \n            (if @loading?\n              [:div {:style {:text-align \"center\" :padding \"2rem\"}}\n               \"Loading users...\"]\n              [user-table @users\n               #(do (reset! current-user {:user/role \"employee\"}) (reset! modal-open? true))\n               #(do (reset! current-user %) (reset! modal-open? true))\n               delete-user-fn])\n            \n            [user-modal current-user modal-open?\n             #(let [is-new? (not (:user/id @current-user))\n                    user @current-user\n                    base-data {:user/username (:user/username user)\n                               :user/full-name (:user/full-name user)\n                               :user/email (:user/email user)\n                               :user/phone (:user/phone user)\n                               :user/role (:user/role user)\n                               :user/workspace-id (when (not (empty? (:user/workspace-id user))) \n                                                     (:user/workspace-id user))}\n                    user-data (if is-new?\n                                (assoc base-data :user/password (:user/password user))\n                                (let [update-data (assoc base-data :user/id (:user/id user) :user/active (:user/active user))]\n                                  (if (and (:user/password user) (seq (str/trim (:user/password user))))\n                                    (assoc update-data :user/password (:user/password user))\n                                    update-data)))]\n                (save-user user-data is-new?))\n             #(reset! modal-open? false)\n             @workspaces]\n            \n            ;; Workspaces Section\n            [:div {:style {:margin-top \"3rem\"}}\n             (if @workspaces-loading?\n               [:div {:style {:text-align \"center\" :padding \"2rem\"}}\n                \"Loading workspaces...\"]\n               [workspace-table @workspaces\n                #(do (reset! current-workspace {}) (reset! workspace-modal-open? true))\n                #(do (reset! current-workspace %) (reset! workspace-modal-open? true))\n                delete-workspace-fn])\n             \n             [workspace-modal current-workspace workspace-modal-open?\n              #(let [is-new? (not (:workspace/id @current-workspace))\n                     workspace @current-workspace\n                     workspace-data {:workspace/name (:workspace/name workspace)\n                                   :workspace/description (:workspace/description workspace)}\n                     workspace-data (if is-new?\n                                      workspace-data\n                                      (assoc workspace-data \n                                             :workspace/id (:workspace/id workspace)\n                                             :workspace/active (:workspace/active workspace)))]\n                 (save-workspace workspace-data is-new?))\n              #(reset! workspace-modal-open? false)]]]]\n          [:div {:style {:min-height \"100vh\"\n                         :display \"flex\"\n                         :align-items \"center\"\n                         :justify-content \"center\"\n                         :background \"#f5f5f5\"}}\n           [:div {:style {:text-align \"center\"}}\n            [:h2 \"Access Denied\"]\n            [:p \"You need superadmin privileges to access this page.\"]\n            [:div {:style {:color \"#666\"}} \"Access denied.\"]]])))))"]}