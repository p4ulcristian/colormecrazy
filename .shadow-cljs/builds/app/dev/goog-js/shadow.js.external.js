["^ ","~:resource-id",["~:shadow.build.classpath/resource","shadow/js/external.js"],"~:js","goog.provide(\"shadow.js.external\");\ngoog.require(\"shadow.js\");\nshadow.js.jsRequire = function(name, opts) {\n  var nativeObj = shadow.js.nativeProvides[name];\n  if (nativeObj !== undefined) {\n    return nativeObj;\n  }\n  try {\n    if (goog.DEBUG) {\n      if (name instanceof String && name.indexOf(\"/\") != -1) {\n        console.warn(\"Tried to dynamically require '\" + name + \"' from '\" + shadow.js.requireStack[shadow.js.requireStack.length - 1] + \"'. This is not supported and may cause issues.\");\n      }\n    }\n    shadow.js.requireStack.push(name);\n    var module = shadow.js.files[name];\n    var moduleFn = shadow$provide[name];\n    if (module === undefined) {\n      if (moduleFn === undefined) {\n        return shadow$bridge(name);\n      }\n      module = {};\n      module[\"exports\"] = {};\n      shadow.js.files[name] = module;\n    }\n    if (moduleFn) {\n      delete shadow$provide[name];\n      try {\n        moduleFn.call(module, goog.global, shadow.js.jsRequire, module, module[\"exports\"]);\n      } catch (e) {\n        console.warn(\"shadow-cljs - failed to load\", name);\n        throw e;\n      }\n      if (opts) {\n        var globals = opts[\"globals\"];\n        if (globals) {\n          var i = 0;\n          for (; i < globals.length; i++) {\n            window[globals[i]] = module[\"exports\"];\n          }\n        }\n      }\n    }\n  } finally {\n    shadow.js.requireStack.pop();\n  }\n  return module[\"exports\"];\n};\n","~:source","goog.provide(\"shadow.js.external\");\ngoog.require(\"shadow.js\")\n\n// same as the actual shadow.js.jsRequire\n// but meant for :js-provider :external as the actual provider for most packages\n// still must be able to provide commonjs dependencies from classpath JS\n// for first checking if package is provided via shadow$provide, and if not check shadow$bridge\n\nshadow.js.jsRequire = function(name, opts) {\n  var nativeObj = shadow.js.nativeProvides[name];\n  if (nativeObj !== undefined) {\n    return nativeObj;\n  }\n\n  try {\n    if (goog.DEBUG) {\n      if (name instanceof String && name.indexOf(\"/\") != -1) {\n        console.warn(\n          \"Tried to dynamically require '\" +\n            name +\n            \"' from '\" +\n            shadow.js.requireStack[shadow.js.requireStack.length - 1] +\n            \"'. This is not supported and may cause issues.\"\n        );\n      }\n    }\n\n    shadow.js.requireStack.push(name);\n\n    var module = shadow.js.files[name];\n    var moduleFn = shadow$provide[name];\n\n    // module must be created before calling moduleFn due to circular deps\n    if (module === undefined) {\n      if (moduleFn === undefined) {\n        return shadow$bridge(name);\n      }\n      module = {};\n      module[\"exports\"] = {};\n      shadow.js.files[name] = module;\n    }\n\n    if (moduleFn) {\n      delete shadow$provide[name];\n\n      try {\n        moduleFn.call(\n          module,\n          goog.global,\n          shadow.js.jsRequire,\n          module,\n          module[\"exports\"]\n        );\n      } catch (e) {\n        console.warn(\"shadow-cljs - failed to load\", name);\n        throw e;\n      }\n\n      if (opts) {\n        var globals = opts[\"globals\"];\n        if (globals) {\n          for (var i = 0; i < globals.length; i++) {\n            window[globals[i]] = module[\"exports\"];\n          }\n        }\n      }\n    }\n  } finally {\n    shadow.js.requireStack.pop();\n  }\n\n  return module[\"exports\"];\n};\n","~:compiled-at",1758471763952,"~:source-map-json","{\n\"version\":3,\n\"file\":\"shadow.js.external.js\",\n\"lineCount\":48,\n\"mappings\":\"AAAAA,IAAKC,CAAAA,OAAL,CAAa,oBAAb,CAAA;AACAD,IAAKE,CAAAA,OAAL,CAAa,WAAb,CAAA;AAOAC,MAAOC,CAAAA,EAAGC,CAAAA,SAAV,GAAsBC,QAAQ,CAACC,IAAD,EAAOC,IAAP,CAAa;AACzC,MAAIC,YAAYN,MAAOC,CAAAA,EAAGM,CAAAA,cAAV,CAAyBH,IAAzB,CAAhB;AACA,MAAIE,SAAJ,KAAkBE,SAAlB;AACE,WAAOF,SAAP;AADF;AAIA,KAAI;AACF,QAAIT,IAAKY,CAAAA,KAAT;AACE,UAAIL,IAAJ,YAAoBM,MAApB,IAA8BN,IAAKO,CAAAA,OAAL,CAAa,GAAb,CAA9B,IAAmD,CAAC,CAApD;AACEC,eAAQC,CAAAA,IAAR,CACE,gCADF,GAEIT,IAFJ,GAGI,UAHJ,GAIIJ,MAAOC,CAAAA,EAAGa,CAAAA,YAAV,CAAuBd,MAAOC,CAAAA,EAAGa,CAAAA,YAAaC,CAAAA,MAA9C,GAAuD,CAAvD,CAJJ,GAKI,gDALJ,CAAA;AADF;AADF;AAYAf,UAAOC,CAAAA,EAAGa,CAAAA,YAAaE,CAAAA,IAAvB,CAA4BZ,IAA5B,CAAA;AAEA,QAAIa,SAASjB,MAAOC,CAAAA,EAAGiB,CAAAA,KAAV,CAAgBd,IAAhB,CAAb;AACA,QAAIe,WAAWC,cAAA,CAAehB,IAAf,CAAf;AAGA,QAAIa,MAAJ,KAAeT,SAAf,CAA0B;AACxB,UAAIW,QAAJ,KAAiBX,SAAjB;AACE,eAAOa,aAAA,CAAcjB,IAAd,CAAP;AADF;AAGAa,YAAA,GAAS,EAAT;AACAA,YAAA,CAAO,SAAP,CAAA,GAAoB,EAApB;AACAjB,YAAOC,CAAAA,EAAGiB,CAAAA,KAAV,CAAgBd,IAAhB,CAAA,GAAwBa,MAAxB;AANwB;AAS1B,QAAIE,QAAJ,CAAc;AACZ,aAAOC,cAAA,CAAehB,IAAf,CAAP;AAEA,SAAI;AACFe,gBAASG,CAAAA,IAAT,CACEL,MADF,EAEEpB,IAAK0B,CAAAA,MAFP,EAGEvB,MAAOC,CAAAA,EAAGC,CAAAA,SAHZ,EAIEe,MAJF,EAKEA,MAAA,CAAO,SAAP,CALF,CAAA;AADE,OAQF,QAAOO,CAAP,CAAU;AACVZ,eAAQC,CAAAA,IAAR,CAAa,8BAAb,EAA6CT,IAA7C,CAAA;AACA,cAAMoB,CAAN;AAFU;AAKZ,UAAInB,IAAJ,CAAU;AACR,YAAIoB,UAAUpB,IAAA,CAAK,SAAL,CAAd;AACA,YAAIoB,OAAJ,CAAa;AACN,cAAIC,IAAI,CAAR;AAAL,eAAA,EAAgBA,CAAhB,GAAoBD,OAAQV,CAAAA,MAA5B,EAAoCW,CAAA,EAApC;AACEC,kBAAA,CAAOF,OAAA,CAAQC,CAAR,CAAP,CAAA,GAAqBT,MAAA,CAAO,SAAP,CAArB;AADF;AADW;AAFL;AAhBE;AA5BZ,GAAJ,QAqDU;AACRjB,UAAOC,CAAAA,EAAGa,CAAAA,YAAac,CAAAA,GAAvB,EAAA;AADQ;AAIV,SAAOX,MAAA,CAAO,SAAP,CAAP;AA/DyC,CAA3C;;\",\n\"sources\":[\"shadow/js/external.js\"],\n\"sourcesContent\":[\"goog.provide(\\\"shadow.js.external\\\");\\ngoog.require(\\\"shadow.js\\\")\\n\\n// same as the actual shadow.js.jsRequire\\n// but meant for :js-provider :external as the actual provider for most packages\\n// still must be able to provide commonjs dependencies from classpath JS\\n// for first checking if package is provided via shadow$provide, and if not check shadow$bridge\\n\\nshadow.js.jsRequire = function(name, opts) {\\n  var nativeObj = shadow.js.nativeProvides[name];\\n  if (nativeObj !== undefined) {\\n    return nativeObj;\\n  }\\n\\n  try {\\n    if (goog.DEBUG) {\\n      if (name instanceof String && name.indexOf(\\\"/\\\") != -1) {\\n        console.warn(\\n          \\\"Tried to dynamically require '\\\" +\\n            name +\\n            \\\"' from '\\\" +\\n            shadow.js.requireStack[shadow.js.requireStack.length - 1] +\\n            \\\"'. This is not supported and may cause issues.\\\"\\n        );\\n      }\\n    }\\n\\n    shadow.js.requireStack.push(name);\\n\\n    var module = shadow.js.files[name];\\n    var moduleFn = shadow$provide[name];\\n\\n    // module must be created before calling moduleFn due to circular deps\\n    if (module === undefined) {\\n      if (moduleFn === undefined) {\\n        return shadow$bridge(name);\\n      }\\n      module = {};\\n      module[\\\"exports\\\"] = {};\\n      shadow.js.files[name] = module;\\n    }\\n\\n    if (moduleFn) {\\n      delete shadow$provide[name];\\n\\n      try {\\n        moduleFn.call(\\n          module,\\n          goog.global,\\n          shadow.js.jsRequire,\\n          module,\\n          module[\\\"exports\\\"]\\n        );\\n      } catch (e) {\\n        console.warn(\\\"shadow-cljs - failed to load\\\", name);\\n        throw e;\\n      }\\n\\n      if (opts) {\\n        var globals = opts[\\\"globals\\\"];\\n        if (globals) {\\n          for (var i = 0; i < globals.length; i++) {\\n            window[globals[i]] = module[\\\"exports\\\"];\\n          }\\n        }\\n      }\\n    }\\n  } finally {\\n    shadow.js.requireStack.pop();\\n  }\\n\\n  return module[\\\"exports\\\"];\\n};\\n\"],\n\"names\":[\"goog\",\"provide\",\"require\",\"shadow\",\"js\",\"jsRequire\",\"shadow.js.jsRequire\",\"name\",\"opts\",\"nativeObj\",\"nativeProvides\",\"undefined\",\"DEBUG\",\"String\",\"indexOf\",\"console\",\"warn\",\"requireStack\",\"length\",\"push\",\"module\",\"files\",\"moduleFn\",\"shadow$provide\",\"shadow$bridge\",\"call\",\"global\",\"e\",\"globals\",\"i\",\"window\",\"pop\"]\n}\n"]