const r=(r,e,t,n,o)=>{if(!n)throw new Error(null!=o?o:`Invalid property path: ${e}\nCouldn't access "${t}" in ${JSON.stringify(r)}`)},e=r=>"object"==typeof r&&null!==r&&!Array.isArray(r),t=r=>Array.isArray(r),n=(r,e)=>r.filter(((r,t)=>t!==e)),o=(r,e,o,a={})=>{const{remove:s=!1,createNew:l=!0,noError:f=!1}=a,u=r,c="string"==typeof(y=e)?y:"number"==typeof y?String(y):y.reduce(((r,e)=>"number"==typeof e?`${r}[${e}]`:""===r?e:`${r}.${e}`),"");var y;const p=Object.assign(Object.assign({},a),{remove:s,createNew:l,noError:f,fullData:u,fullPath:c}),m=Array.isArray(e)?e:(r=>Array.isArray(r)?r:r.split(/(\.|\[\d+\])/).filter((r=>"."!==r&&""!==r)).map((r=>{const e=/\[(\d+)\]/.exec(r);return e?Number(e[1]):r})).flat())(e).filter((r=>""!==r));return t(r)&&s&&1===m.length?n(r,m[0]):i(r,m,o,p)},i=(o,l,f,u)=>{const c=e(o)?Object.assign({},o):null,y=t(o)?[...o]:null;if(0===l.length)return o;if(!c&&!y)throw new Error("Can't assign property -- invalid input object");const{createNew:p,remove:m,noError:b,fullData:g,fullPath:h}=u,d=l[0];if(y&&"string"==typeof d)return y.map((r=>i(r,l,f,u)));if(1===l.length){if(c&&"string"==typeof d){const r=a(c,d,f,u);return null!=r?r:c}return y&&"number"==typeof d?(s(y,d,f,u),y):(r(g,h,d,b),o)}const v=c||y||[];if(m&&2===l.length&&"number"==typeof l[1]){const e=v[d],o=l[1];return t(e)?v[d]=n(e,o):r(g,h,d,b,"Trying to remove an indexed item from an object that is not an array"),v}const A=l.slice(1);if(d in o){if(w=v[d],!t(w)&&!e(w)){if(!p)return r(g,h,d,b),v;v[d]={}}return v[d]=i(v[d],A,f,u),v}var w;if(p){const r="number"==typeof A[0]?[]:{};if(c)return v[d]=r,v[d]=i(v[d],A,f,u),v;if(y&&Array.isArray(v)){v.push(r);const e=v.length-1;return v[e]=i(v[e],A,f,u),v}}return r(g,h,d,b),v},a=(e,t,n,o)=>{const{remove:i,createNew:a,noError:s,insertAfter:l,insertBefore:f,fullData:u,fullPath:c}=o;if(void 0!==f||void 0!==l){const r=Object.entries(e);let o=1/0;return o="number"==typeof f?f:"number"==typeof l?l:r.findIndex((([r,e])=>r===(null!=f?f:l))),l&&o++,r.splice(o,0,[t,n]),Object.fromEntries(r)}const y=t in e;i?y?delete e[t]:r(u,c,t,s):a||y?e[t]=n:r(u,c,t,s)},s=(e,t,n,o)=>{const{noError:i,fullData:a,fullPath:s,createNew:l,insert:f}=o;f&&e.splice(t,0,n),t in e?e[t]=n:l?e.push(n):r(a,s,t,i)};export{o as default};
