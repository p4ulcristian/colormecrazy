type BasicType = string | number | boolean | undefined | null | Function;
type Value = Input | BasicType;
type InputObject = {
    [key: string]: Value;
};
type InputArray = Value[];
type Input = InputObject | InputArray;
interface Options {
    remove?: boolean;
    noError?: boolean;
    createNew?: boolean;
    insert?: boolean;
    insertBefore?: string | number;
    insertAfter?: string | number;
}
type Path = (string | number)[];

declare const assign: (data: Input, propertyPath: string | Path, newValue: any, options?: Options) => Input;

export { BasicType, Input, InputArray, InputObject, Options, Value, assign as default };
